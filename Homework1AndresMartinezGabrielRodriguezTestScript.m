clear, clc

% Define the inputs to test the function
input_folder='.\DICOMFiles2018'; % It should be an existing folder in the MATLAB directory
save_folder='.\Save folder Gabriel Rodríguez Andrés Martínez';
[image_cell, pixelSize, window_width]=read_dicom_series(input_folder,save_folder);

% Now we obtain the cell with the 3D stack and the matrix with the pixel
% sizes, so at first, we will convert each stack of the cell into a
% separate stack.

% We must firstly know the number of series found, which is the length of
% the cell generated by the function. In this case we just have two series:
% the first one is a PT and the second one is a CT

 WW=[window_width(1,round(size(image_cell{1,2},3)/2)) window_width(2,round(size(image_cell{1,2},3)/2))]; % Window width for the CT image series in the central slice
 WC=mean(WW); % Window center for the CT image series in the central slice
 
for i=1:length(image_cell)
    fprintf('The pixel size of series %d is %fmm X %fmm X %fmm\n',i,pixelSize(i,1),pixelSize(i,2),pixelSize(i,3));
    if i==1
        imshow(image_cell{1,i}(:,:,round(size(image_cell{1,i},3)/2)),[]), title ('Central slice for series 1');
        figure 
    elseif i==2 % The second series is a CT image, so we will display it with the optimal window width and window level
        imshow(image_cell{1,i}(:,:,round(size(image_cell{1,i},3)/2)),[WW(1) WW(2)]), title ('Central slice for series 2 with the appropiate window width and level');
        fprintf('The CT series is displayed in the middle slice with a window width of %d Hounsfield Units (HUs), between %d and %d HUs and with a window level of %d HUs\n',WW(2)-WW(1),WW(1),WW(2),WC);
    end
end
